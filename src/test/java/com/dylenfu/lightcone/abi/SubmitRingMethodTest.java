/*

  Copyright 2017 Loopring Project Ltd (Loopring Foundation).

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

*/

package com.dylenfu.lightcone.abi;

import com.google.inject.Injector;
import org.apache.log4j.Logger;
import org.junit.Test;
import org.spongycastle.util.encoders.Hex;

import static junit.framework.TestCase.assertEquals;

public class SubmitRingMethodTest {

    @Test
    public void unpackTest() {

        Injector injector = Common.getInjector();
        //byte[] input = Hex.decode("e78aadb20000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000000000000000000000000000000000000000054000000000000000000000000000000000000000000000000000000000000005e00000000000000000000000004bad3053d574cd54513babe21db3f09bea1d387d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000001b978a1d302335a6f2ebe4b8823b5e17c3c84135000000000000000000000000f079e0612e869197c5f4c7d0a95df570b163232b0000000000000000000000001b978a1d302335a6f2ebe4b8823b5e17c3c8413500000000000000000000000047fe1648b80fa04584241781488ce4c0aaca23e4000000000000000000000000b1018949b241d76a1ab2094f473e9befeabb5ead000000000000000000000000cd36128815ebe0b44d0374649bad2721b8751bef000000000000000000000000b1018949b241d76a1ab2094f473e9befeabb5ead00000000000000000000000047fe1648b80fa04584241781488ce4c0aaca23e40000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000000000001043561a8829300000000000000000000000000000000000000000000000000000000000005b334fcf000000000000000000000000000000000000000000000000000000005bb725cf0000000000000000000000000000000000000000000000004563918244f4000000000000000000000000000000000000000000000000000000fb36fcb316e31c00000000000000000000000000000000000000000000002086ac351052600000000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000005b2b1fdf000000000000000000000000000000000000000000000000000000005baef5df00000000000000000000000000000000000000000000000029a2241af62c0000000000000000000000000000000000000000000000000016ffd8c2a5686adc000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b00000000000000000000000000000000000000000000000000000000000000046d03f4f75061a76e2508b1881fa2ec5541a2b9483f00fa5430d190157fe3c295a3c610bb38e519abd6b4ba30c57123a9be66bd5d1cca5e057d9e428dcf52b5d1f5165f951e56e4591f42d617683a4443440a9c6d43ad568a15fafe5a15daca4df5165f951e56e4591f42d617683a4443440a9c6d43ad568a15fafe5a15daca4d00000000000000000000000000000000000000000000000000000000000000040ac7d306ef1e7641d4e66dfab39fd730bef47be20e0bd7b134232a0ab3ffa0495aad9c9da595658f47d7370385575f475fee70aa5787661336e5816d5ecde3870b75430960db7186286a6a7b9a90dbfadfca691b0128b000cd2d542fee5c77310b75430960db7186286a6a7b9a90dbfadfca691b0128b000cd2d542fee5c7731");
        byte[] input = Hex.decode("000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000000000000000000000000000000000000000054000000000000000000000000000000000000000000000000000000000000005e00000000000000000000000004bad3053d574cd54513babe21db3f09bea1d387d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000001b978a1d302335a6f2ebe4b8823b5e17c3c84135000000000000000000000000f079e0612e869197c5f4c7d0a95df570b163232b0000000000000000000000001b978a1d302335a6f2ebe4b8823b5e17c3c8413500000000000000000000000047fe1648b80fa04584241781488ce4c0aaca23e4000000000000000000000000b1018949b241d76a1ab2094f473e9befeabb5ead000000000000000000000000cd36128815ebe0b44d0374649bad2721b8751bef000000000000000000000000b1018949b241d76a1ab2094f473e9befeabb5ead00000000000000000000000047fe1648b80fa04584241781488ce4c0aaca23e40000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000000000001043561a8829300000000000000000000000000000000000000000000000000000000000005b334fcf000000000000000000000000000000000000000000000000000000005bb725cf0000000000000000000000000000000000000000000000004563918244f4000000000000000000000000000000000000000000000000000000fb36fcb316e31c00000000000000000000000000000000000000000000002086ac351052600000000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000005b2b1fdf000000000000000000000000000000000000000000000000000000005baef5df00000000000000000000000000000000000000000000000029a2241af62c0000000000000000000000000000000000000000000000000016ffd8c2a5686adc000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b00000000000000000000000000000000000000000000000000000000000000046d03f4f75061a76e2508b1881fa2ec5541a2b9483f00fa5430d190157fe3c295a3c610bb38e519abd6b4ba30c57123a9be66bd5d1cca5e057d9e428dcf52b5d1f5165f951e56e4591f42d617683a4443440a9c6d43ad568a15fafe5a15daca4df5165f951e56e4591f42d617683a4443440a9c6d43ad568a15fafe5a15daca4d00000000000000000000000000000000000000000000000000000000000000040ac7d306ef1e7641d4e66dfab39fd730bef47be20e0bd7b134232a0ab3ffa0495aad9c9da595658f47d7370385575f475fee70aa5787661336e5816d5ecde3870b75430960db7186286a6a7b9a90dbfadfca691b0128b000cd2d542fee5c77310b75430960db7186286a6a7b9a90dbfadfca691b0128b000cd2d542fee5c7731");
        SubmitRingMethod ring = injector.getInstance(SubmitRingMethod.class);

        ring.setInput(input);

        try {
            ring.unpack();
        } catch (Exception e) {
            injector.getInstance(Logger.class).debug(e.getMessage());
        }

        assertEquals(ring.getFeeSelections().toString(), "4340174518196214030398984939526511308286751685412162371584");
    }
}
